name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: v1.0.0)'
        required: true
        default: 'v1.0.0'

env:
  BINARY_NAME: gottyp
  GO_VERSION: '1.21'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Run linting
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            artifact_name: gottyp-linux-amd64
          - os: linux
            arch: arm64
            artifact_name: gottyp-linux-arm64
          - os: windows
            arch: amd64
            artifact_name: gottyp-windows-amd64.exe
          - os: windows
            arch: arm64
            artifact_name: gottyp-windows-arm64.exe
          - os: darwin
            arch: amd64
            artifact_name: gottyp-darwin-amd64
          - os: darwin
            arch: arm64
            artifact_name: gottyp-darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
          VERSION: ${{ steps.version.outputs.VERSION }}
          BUILD_TIME: ${{ github.run_number }}
          GIT_COMMIT: ${{ github.sha }}
        run: |
          LDFLAGS="-X main.Version=${VERSION} -X main.BuildTime=${BUILD_TIME} -X main.GitCommit=${GIT_COMMIT} -s -w"
          go build -ldflags "$LDFLAGS" -o ${{ matrix.artifact_name }} ./main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Release ${{ steps.version.outputs.VERSION }}
          body: |
            ## gotty-piko-client ${{ steps.version.outputs.VERSION }}
            
            ### 下载
            选择适合您系统的版本下载：
            
            **Linux:**
            - [gottyp-linux-amd64](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/gottyp-linux-amd64) (x86_64)
            - [gottyp-linux-arm64](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/gottyp-linux-arm64) (ARM64)
            
            **Windows:**
            - [gottyp-windows-amd64.exe](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/gottyp-windows-amd64.exe) (x86_64)
            - [gottyp-windows-arm64.exe](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/gottyp-windows-arm64.exe) (ARM64)
            
            **macOS:**
            - [gottyp-darwin-amd64](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/gottyp-darwin-amd64) (Intel)
            - [gottyp-darwin-arm64](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/gottyp-darwin-arm64) (Apple Silicon)
            
            ### 安装说明
            
            **Linux/macOS:**
            ```bash
            # 下载并设置执行权限
            chmod +x gottyp-linux-amd64
            # 移动到 PATH 目录
            sudo mv gottyp-linux-amd64 /usr/local/bin/gottyp
            ```
            
            **Windows:**
            下载 .exe 文件后直接运行即可。
            
            ### 使用示例
            ```bash
            # 启动本机模式
            gottyp --name=my-server
            
            # 连接到远程服务器
            gottyp --name=my-server --remote=192.168.1.100:8088
            ```
          files: |
            gottyp-linux-amd64
            gottyp-linux-arm64
            gottyp-windows-amd64.exe
            gottyp-windows-arm64.exe
            gottyp-darwin-amd64
            gottyp-darwin-arm64
          draft: false
          prerelease: false 