name: Release

on:
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install client dependencies
        run: |
          cd client
          make deps

      - name: Build client for all platforms
        run: |
          cd client
          make build-all

      - name: Build server production image
        run: |
          cd server
          make build-prod

      - name: Push server image
        run: |
          cd server
          DOCKER_REGISTRY=${{ env.REGISTRY }} make build-push

      - name: Create release assets
        run: |
          cd client/dist
          for file in gottyp-*; do
            if [[ -f "$file" ]]; then
              echo "Preparing asset: $file"
              # 可以在这里添加压缩或其他处理
            fi
          done

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./client/dist/gottyp-linux-amd64
          asset_name: gottyp-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Windows assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./client/dist/gottyp-windows-amd64.exe
          asset_name: gottyp-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./client/dist/gottyp-darwin-amd64
          asset_name: gottyp-darwin-amd64
          asset_content_type: application/octet-stream 